openapi: 3.0.3
info:
  title: Images API
  description: |
    A high-performance image serving and processing API built with Rust and Actix Web.
    Provides endpoints for image retrieval, processing, and metadata management.
  version: 1.0.0
  contact:
    name: Jeff Bridwell
servers:
  - url: http://192.168.86.242:8081
    description: Local development server

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the current health status of the service
      operationId: healthCheck
      tags:
        - System
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /image-content:
    get:
      summary: Search for content related to an image
      description: |
        Searches for movies, archives, and folders related to the given image name.
        Results are paginated and include metadata about the files found.
      operationId: searchImageContent
      tags:
        - Content
      parameters:
        - name: image_name
          in: query
          description: Name of the image to search for
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number (1-based)
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: page_size
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
      responses:
        '200':
          description: Successfully retrieved content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContentResponse'
        '400':
          description: Bad request - missing or invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          description: Current health status of the service
          example: "healthy"
        commit:
          type: string
          description: Current git commit hash
          example: "a1b2c3d4"
        timestamp:
          type: string
          format: date-time
          description: Current server timestamp
          example: "2025-01-09T11:53:13-05:00"
      required:
        - status
        - commit
        - timestamp

    ContentInfo:
      type: object
      properties:
        content_name:
          type: string
          description: Name of the content file
          example: "example.mp4"
        content_type:
          type: string
          description: Type/extension of the content
          example: "mp4"
        content_url:
          type: string
          description: Full path to the content
          example: "/path/to/content/example.mp4"
        content_tags:
          type: array
          description: User-assigned tags for the content
          items:
            type: string
          example: ["tag1", "tag2"]
        content_created:
          type: integer
          format: int64
          description: Unix timestamp of content creation time
          nullable: true
          example: 1641740400
        content_viewed:
          type: integer
          format: int64
          description: Unix timestamp of last viewed time
          nullable: true
          example: 1641740400
        content_size:
          type: integer
          format: int64
          description: Size of the content in bytes
          nullable: true
          example: 1024
      required:
        - content_name
        - content_type
        - content_url
        - content_tags

    PaginatedContentResponse:
      type: object
      properties:
        items:
          type: array
          description: Array of content items for the current page
          items:
            $ref: '#/components/schemas/ContentInfo'
        total:
          type: integer
          description: Total number of items across all pages
          example: 352
        page:
          type: integer
          description: Current page number
          minimum: 1
          example: 1
        total_pages:
          type: integer
          description: Total number of pages
          minimum: 1
          example: 8
        page_size:
          type: integer
          description: Number of items per page
          example: 50
      required:
        - items
        - total
        - page
        - total_pages
        - page_size

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "No image_name provided"
      required:
        - error

tags:
  - name: System
    description: System-related endpoints
  - name: Content
    description: Content-related endpoints
